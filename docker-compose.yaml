version: "3.9"

services:
  db:
    image: postgres:14
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - ~/postgres_data/pg-data:/var/lib/postgresql/data
    #      - ./data/db:/var/lib/postgresql/data
    #        - .:/app/api
    environment:
      - POSTGRES_DB=portfolio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U postgres

  backend:
    build: https://github.com/berkayersengun/portfolio-api.git#main
    image: berkayersengun/portfolio-api-backend:1.0.0
#    build: .
    # command: gunicorn port.wsgi:application --bind 0.0.0.0:8000
    # command: python manage.py runserver 0.0.0.0:8000
    # image: berkayersengun/portfolio-django:0.0.1
    #    entrypoint: ./docker-entrypoint.sh
    volumes:
      # - ./static:/app/api/static/
      - static_volume:/app/api/static/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    #      - timezone_volume:/etc/timezone
    ports:
      - "8001:8000"
    environment:
      - POSTGRES_DB=portfolio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    #      - DJANGO_SETTINGS_MODULE=port.settings
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  scheduler:
    build: https://github.com/berkayersengun/portfolio-api.git#main
    image: berkayersengun/portfolio-api-backend:1.0.0
    entrypoint: ./docker-entrypoint-scheduler.sh
    environment:
      - POSTGRES_DB=portfolio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  frontend:
    #    build: ../portfolio-ui/
    build: https://github.com/berkayersengun/portfolio-ui.git#main
    image: berkayersengun/portfolio-api-frontend:1.0.0
    ports:
      - "3080:80" #host:container
    #      - "3443:443"
    volumes:
      # - ./static:/app/api/static/
      - static_volume:/app/api/static/
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

volumes:
  static_volume:
  # data-volume:
#  timezone_volume:
#    driver: local
#    driver_opts:
#      type: none
##      o: bind
#      device: /etc/timezone

#    volumes:
#      - ./certbot/www:/var/www/certbot/:ro
#      - ./certbot/conf/:/etc/nginx/ssl/:ro
#  certbot:
#    image: certbot/certbot:arm64v8-latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw
#    command: certonly --webroot -w /var/www/certbot --force-renewal --email berkayersengun@gmail.com -d berkay.crabdance.com --agree-tos